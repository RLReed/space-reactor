import sys
import os
import numpy as np

def makeMCNP(r, t, h):
    nFuel = 1
    if nFuel == 1:
        fuel = '''c uranium dioxide - density 10.97
m1         8016.80c -0.119749645
          92235.84c -0.817852652
          92238.84c -0.062344659
           1001.80c -0.000053044'''
        dens = 10.97
    elif nFuel == 2:
        fuel = '''c uranium carbide - density 13.63
m1         6000.80c -0.0485396624
          92235.84c -0.8840286010
          92238.84c -0.0673892313
           1001.80c -0.0000425054'''   
        dens = 13.6
    elif nFuel == 3:
        fuel = '''c uranium carbide - density 13.63
m1         92235.85c 0.0008888
           92238.85c 0.0000275
           40000.80c 0.0292010
           41093.80c 0.0097337
           6000.80c 0.0398509
mt2 grph.08t $2000 K graph, fuel @ 3000'''   
        dens = 14.155260188
    
    s = '''TrigaModel
c ******************************************************************************
c   CELL CARDS
c ******************************************************************************
1 1 -{:6.4f} -11                                           IMP:P,N=1  $ fuel
2 3 -3.01 11 -12                                          IMP:P,N=1  $ reflector
4 0  12                                                   IMP:P,N=0  $ graveyard

c ******************************************************************************
c   SURFACE CARDS
c ******************************************************************************
11 RCC 0 0 -{:5.3f}  0 0 {:5.3f} {:5.3f}  $ Inner (fuel) cylinder
12 RCC 0 0 -{:5.3f} 0 0 {:5.3f} {:5.3f}  $ Reflector

c ******************************************************************************
c   DATA CARDS
c ******************************************************************************
c
c *** Materials
{}
c tungsten carbide - density 15.6
m2         6000.80c -0.061256681
          74182.80c -0.246200810
          74183.80c -0.133585507
          74184.80c -0.288355615
          74186.80c -0.270601387
c berillium oxide reflector
m3         4009.80c .5 $ BeO 
           8016.80c .5 $ BeO
mt3 beo.62t $ BeO at 600 K
c
c *** Problem Specification
mode  n
kcode 10000 1.000000 30 80
ksrc 0.0 1.5 0.0
F4:N 1
E4 1.00000000e-05   5.00000000e-03   1.00000000e-02   1.50000000e-02
       2.00000000e-02   2.50000000e-02   3.00000000e-02   3.50000000e-02
       4.20000000e-02   5.00000000e-02   5.80000000e-02   6.70000000e-02
       8.00000000e-02   1.00000000e-01   1.40000000e-01   1.80000000e-01
       2.20000000e-01   2.50000000e-01   2.80000000e-01   3.00000000e-01
       3.20000000e-01   3.50000000e-01   4.00000000e-01   5.00000000e-01
       6.25000000e-01   7.80000000e-01   8.50000000e-01   9.10000000e-01
       9.50000000e-01   9.72000000e-01   9.96000000e-01   1.02000000e+00
       1.04500000e+00   1.07100000e+00   1.09700000e+00   1.12300000e+00
       1.15000000e+00   1.30000000e+00   1.50000000e+00   2.10000000e+00
       2.60000000e+00   3.30000000e+00   4.00000000e+00   9.87700000e+00
       1.59680000e+01   2.77000000e+01   4.80520000e+01   7.55014000e+01
       1.48729000e+02   3.67263000e+02   9.06899000e+02   1.42510000e+03
       2.23945000e+03   3.51910000e+03   5.53000000e+03   9.11800000e+03
       1.50300000e+04   2.47800000e+04   4.08500000e+04   6.73400000e+04
       1.11000000e+05   1.83000000e+05   3.02500000e+05   5.00000000e+05
       8.21000000e+05   1.35300000e+06   2.23100000e+06   3.67900000e+06
       6.06550000e+06   1.00000000e+07
FMESH14:n GEOM=CYL ORIGIN=0.,0.,-{} IMESH={} JMESH={} KMESH=1
          IINTS={} JINTS=35 KINTS=1 OUT=CF AXS=0 0 1 VEC=1 0 0
          EMESH=1.00000000e-05, 5.00000000e-03, 1.00000000e-02,  1.50000000e-02,
           2.00000000e-02,   2.50000000e-02,   3.00000000e-02,   3.50000000e-02,
           4.20000000e-02,   5.00000000e-02,   5.80000000e-02,   6.70000000e-02,
           8.00000000e-02,   1.00000000e-01,   1.40000000e-01,   1.80000000e-01,
           2.20000000e-01,   2.50000000e-01,   2.80000000e-01,   3.00000000e-01,
           3.20000000e-01,   3.50000000e-01,   4.00000000e-01,   5.00000000e-01,
           6.25000000e-01,   7.80000000e-01,   8.50000000e-01,   9.10000000e-01,
           9.50000000e-01,   9.72000000e-01,   9.96000000e-01,   1.02000000e+00,
           1.04500000e+00,   1.07100000e+00,   1.09700000e+00,   1.12300000e+00,
           1.15000000e+00,   1.30000000e+00,   1.50000000e+00,   2.10000000e+00,
           2.60000000e+00,   3.30000000e+00,   4.00000000e+00,   9.87700000e+00,
           1.59680000e+01,   2.77000000e+01,   4.80520000e+01,   7.55014000e+01,
           1.48729000e+02,   3.67263000e+02,   9.06899000e+02,   1.42510000e+03,
           2.23945000e+03,   3.51910000e+03,   5.53000000e+03,   9.11800000e+03,
           1.50300000e+04,   2.47800000e+04,   4.08500000e+04,   6.73400000e+04,
           1.11000000e+05,   1.83000000e+05,   3.02500000e+05,   5.00000000e+05,
           8.21000000e+05,   1.35300000e+06,   2.23100000e+06,   3.67900000e+06,
           6.06550000e+06,   1.00000000e+07'''.format(0.25 * dens, h, 2 * h, r, h + t, 2 * h + 2 * t, r + t, fuel, h, 2 * h, int(r), int(r))
           
    with open('r{:5.3f}h{:5.3f}t{:5.3f}.i'.format(r, h, t), 'w') as f:
        f.write(s)
    os.system('mcnp6 name=r{:5.3f}h{:5.3f}t{:5.3f}.i tasks 28'.format(r, h, t))
        
if __name__ == "__main__":
    for h in np.linspace(2.5, 25, 10):
        for t in np.linspace(2, 20, 10):
            for r in np.linspace(2, 20, 10):
                makeMCNP(r=r, t=t, h=h)
